{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","Scroll","style","border","overflowY","height","children","SearchBox","searchChange","searchfield","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","fetch","then","Response","json","users","this","filterRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAceA,G,OAZF,SAACC,GAAW,IACdC,EAAgBD,EAAhBC,KAAKC,EAAWF,EAAXE,MAAMC,EAAKH,EAALG,GACpB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACE,6BAAKF,IACL,4BAAIC,YCWGK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OAAO,8BACFA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCEAC,EARD,SAACZ,GACX,OACA,qBAAKa,MAAO,CAACC,OAAO,kBAAkBC,UAAU,SAASC,OAAO,SAAhE,SACEhB,EAAMiB,YCSGC,G,OAZG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,aAA8B,EAAjBC,YAC/B,OACE,qBAAKhB,UAAU,MAAf,SACE,uBACEA,UAAU,gCACViB,KAAK,SACLC,YAAY,eACZC,SAAUJ,QCmCHK,E,kDAnCb,aAAe,IAAD,8BACZ,gBAWFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEP,YAAaM,EAAME,OAAOC,SAX1C,EAAKC,MAAQ,CACXtB,OAAQ,GACRY,YAAa,IAJH,E,gEAOO,IAAD,OAClBW,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKR,SAAS,CAAEnB,OAAQ2B,S,+BAKnC,IAAD,EACyBC,KAAKN,MAA7BtB,EADD,EACCA,OAAQY,EADT,EACSA,YACViB,EAAe7B,EAAO8B,QAAO,SAAC9B,GAClC,OAAOA,EAAOP,KACXsC,cACAC,SAASpB,EAAYmB,kBAE1B,OAAS/B,EAAOiC,OAGZ,sBAAKrC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,8BACA,cAAC,EAAD,CAAWe,aAAciB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ6B,SANzB,oBAAIjC,UAAU,QAAd,yB,GAxBasC,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.53a7038b.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nconst Card = (props) => {\r\n    const {name,email,id} =props;\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${id}&200x200`}  />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return <div>{\r\n       robots.map((user, i) => {\r\n      return (\r\n        <Card\r\n          key={i}\r\n          id={robots[i].id}\r\n          name={robots[i].name}\r\n          email={robots[i].email}\r\n        />\r\n      );\r\n       }\r\n       )\r\n    }\r\n  </div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst Scroll =(props)=>{\r\n    return(\r\n    <div style={{border:\"1px solid black\",overflowY:\"scroll\",height:\"700px\"}}>\r\n     {props.children}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange,searchfield}) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"robot search\"\r\n        onChange={searchChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import { render } from \"@testing-library/react\";\r\nimport React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport Scroll from \"..//components/Scroll\";\r\nimport \"../container/App.css\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport { robots } from \"../robots\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((Response) => Response.json())\r\n      .then((users) => this.setState({ robots: users }))\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filterRobots = robots.filter((robots) => {\r\n      return robots.name\r\n        .toLowerCase()\r\n        .includes(searchfield.toLowerCase());\r\n    });\r\n    return (!robots.length) ?\r\n     <h1 className=\"tc f1\">Loading</h1>\r\n    : (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends Park</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <CardList robots={filterRobots} />\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./container/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}